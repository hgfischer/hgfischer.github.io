<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shell on Memory Leak</title>
    <link>http://hgfischer.org/tags/shell/</link>
    <description>Recent content in Shell on Memory Leak</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright (c) 1997-2014, Herbert G. Fischer; all rights reserved.</copyright>
    <lastBuildDate>Thu, 05 Feb 2015 21:26:44 +0000</lastBuildDate>
    <atom:link href="http://hgfischer.org/tags/shell/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Manage multiple GOPATH dirs with ease</title>
      <link>http://hgfischer.org/article/managing-multiple-gopaths/</link>
      <pubDate>Thu, 05 Feb 2015 21:26:44 +0000</pubDate>
      
      <guid>http://hgfischer.org/article/managing-multiple-gopaths/</guid>
      <description>&lt;p&gt;Usually I have only one GOPATH in my machine and thats most Gophers out there recommend. However, sometimes we just
need to work on different projects with different versions of the same dependency, and it is out of question to update
them. We just don&amp;rsquo;t want to break something that is working, or mess with it.&lt;/p&gt;

&lt;p&gt;The quick solution is to point GOPATH to somewhere else, but everytime we have to swap the project we are working on,
we need to change it again.&lt;/p&gt;

&lt;p&gt;So I just came up with a simple solution that works on command line shell with Bash, and can be adapted to other
shells. Since I am a vim user, this should work well. I do not recommend this method for Sublime Text users or just any
other IDE that uses its own method for setting GOPATH. It will not work unless you load the Editor/IDE from the same
command line shell and it do not have its own way to setup GOPATH.&lt;/p&gt;

&lt;p&gt;The solution is simple. Just include the following snippet in your &lt;code&gt;~/.bashrc&lt;/code&gt; (or &lt;code&gt;~/.bash_profile&lt;/code&gt;) and reload your
shell environment with &lt;code&gt;source ~/.bashrc&lt;/code&gt;. This snippet will create a shell function that will override the builtin
command &lt;code&gt;cd&lt;/code&gt; with a customized one that scans the entered directory, and every other above, for a file named &lt;code&gt;.gopath&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd () {
    builtin cd &amp;quot;$@&amp;quot;
    cdir=$PWD
    while [ &amp;quot;$cdir&amp;quot; != &amp;quot;/&amp;quot; ]; do
        if [ -e &amp;quot;$cdir/.gopath&amp;quot; ]; then
            export GOPATH=$cdir
            break
        fi
        cdir=$(dirname &amp;quot;$cdir&amp;quot;)
    done
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you just need to create a &lt;code&gt;.gopath&lt;/code&gt; file in every directory you want as your GOPATH and every time you enter this
directory, the redefined &lt;code&gt;cd&lt;/code&gt; function will set the GOPATH of your current environment to this directory.&lt;/p&gt;

&lt;p&gt;For example, let us create two directories, &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt;, both with a subdirectory &lt;code&gt;src&lt;/code&gt; to fully illustrate the solution.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ go env GOPATH
/home/user/Go

$ mkdir -p ~/A/src &amp;amp;&amp;amp; touch ~/A/.gopath
$ mkdir -p ~/B/src &amp;amp;&amp;amp; touch ~/B/.gopath

$ cd ~/A/src
$ go env GOPATH
/home/user/A

$ cd ~/B/src
$ go env GOPATH
/home/user/B
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ok, but now I want my old GOPATH back again&amp;hellip;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd /home/user/Go
$ go env GOPATH
/home/user/B
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Oops&amp;hellip; We just need to touch .gopath here!!&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ touch /home/user/Go/.gopath
$ cd .
$ go env GOPATH
/home/user/Go
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That&amp;rsquo;s it! Simple GOPATH management without external dependencies (eg. direnv)!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Separadores no Bash</title>
      <link>http://hgfischer.org/artigo/separadores-bash/</link>
      <pubDate>Mon, 02 Nov 2009 11:41:00 +0000</pubDate>
      
      <guid>http://hgfischer.org/artigo/separadores-bash/</guid>
      <description>&lt;p&gt;Quantas vezes já foi obrigado a refazer um script em outra linguagem quando se deparou com um &lt;em&gt;for&lt;/em&gt; que recebia valores
com espaços e não sabia como resolver isto diretamente no Bash?&lt;/p&gt;

&lt;p&gt;Eu mesmo já fiz isto algumas vezes. Mesmo quando sabia que era possível consertar o problema no próprio Bash eu acabava
partindo para o novo script pois encontrava um pouco de dificuldade de encontrar documentação sobre isto. O manual do
Bash não ajuda muito na forma correta de se configurar a variável IFS.&lt;/p&gt;

&lt;p&gt;IFS (Internal Field Separator) é uma variável que permite configurar quais são os caracteres que o Bash considera serem
separadores de campos. E é com o IFS que o loop for sabe separar os itens dentro de uma string ou dentre várias linhas.&lt;/p&gt;

&lt;p&gt;O IFS padrão é configurado para separar campos com espaços, tabulações e linhas.&lt;/p&gt;

&lt;p&gt;Para alterar o valor do IFS para não separar campos com espaços, basta utilizar o comando abaixo:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ export IFS=$&#39;\t\n&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Agora quando quiser efetuar alguma tarefa numa lista de arquivos que tem espaços em seu nome, não terá problemas. Veja
o exemplo:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export IFS=$&#39;\t\n&#39;
for f in `ls -1`
do
    echo $f
done
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Barra de Status no GNU Screen</title>
      <link>http://hgfischer.org/artigo/barra-status-gnu-screen/</link>
      <pubDate>Mon, 08 Dec 2008 22:29:00 +0000</pubDate>
      
      <guid>http://hgfischer.org/artigo/barra-status-gnu-screen/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.gnu.org/software/screen/&#34;&gt;GNU Screen&lt;/a&gt; é um gerenciador de terminais virtuais para a linha de comando. Seu
uso em geral agiliza a administração remota de servidores pelo simples fato de ser necessário abrir apenas uma conexão
SSH e através desta se pode ter vários terminais virtuais.&lt;/p&gt;

&lt;p&gt;Uma outra vantagem em utilizar o GNU Screen, é deixar o gerenciador e retomá-lo sempre que precisar. Isso significa que
você pode desconectar do servidor e deixar o gerenciador aberto com todas as &amp;ldquo;janelas&amp;rdquo; e processos rodando. Não só traz
um benefício proposital, mas também pode salvar seu dia caso não tenha uma conexão estável com o servidor remoto.&lt;/p&gt;

&lt;p&gt;Por estas e outras razões eu sempre utilizo GNU Screen quando possível (quando está instalado no servidor remoto).&lt;/p&gt;

&lt;p&gt;No entanto por padrão ele não é muito amigável pois não exibe nenhuma informação na tela, sendo necessário utilizar
atalhos de teclado para ver quais janelas estão abertas.&lt;/p&gt;

&lt;p&gt;Após muito procurar, e isso já faz um bom tempo, consegui criar uma configuração padrão, para meus Screen. Esta exibe
uma barra de informações na parte inferior da tela.&lt;/p&gt;

&lt;p&gt;A configuração abaixo pode ser colocada no &lt;code&gt;/etc/screenrc&lt;/code&gt; ou no &lt;code&gt;~/.screenrc&lt;/code&gt;. Dependendo de onde colocar, ela valerá
para todo o sistema ou somente para o usuário corrente, respectivamente.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vbell off
hardstatus off
backtick 1 1200 1200 whoami
caption always &amp;quot;%{= cW} %c | %l | %-Lw%{= bW}%65&amp;gt; [%n] %t %f* %{-}%+Lw%&amp;lt;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A partir deste exemplo, você pode personalizar sua barra de status da forma que quiser. São dezenas de opções que ao
invés de citar aqui, recomendo que leia no manual do próprio screen (&lt;code&gt;man screen&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Veja como ficou:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://hgfischer.org/media/screen.png&#34; alt=&#34;captura de tela do terminal rodando screen&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Observe que no rodapé do terminal encontra-se várias informações: Relógio, Load Average e a lista de janelas. A janela
atual aparece destacada em azul.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>